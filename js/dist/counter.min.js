ready(()=>{let n=new IntersectionObserver(function(t){t.map(t=>{var e;t.isIntersecting&&(e=(t=t.target).querySelector("span"),n.unobserve(t),function t(e){if(e.start+e.duration<Date.now())return void(e.el.innerHTML=a(e.to,e.thousands));let n;switch(e.timing){case"ease-linear":n=(Date.now()-e.start)/e.duration;break;case"ease-in":n=o((Date.now()-e.start)/e.duration);break;case"ease-out":n=i((Date.now()-e.start)/e.duration);break;case"ease-in-out":n=s((Date.now()-e.start)/e.duration)}let r=parseInt((e.to-e.from)*n+e.from);r=a(r,e.thousands);e.el.innerHTML=r;window.requestAnimationFrame(function(){t(e)})}({el:e,from:parseInt(e.innerHTML),to:parseInt(t.getAttribute("data-to")),duration:parseInt(t.getAttribute("data-duration")),timing:t.getAttribute("data-timing")??"ease-in-out",start:Date.now(),thousands:t.getAttribute("data-thousands")??"none"}))})},{threshold:.1});document.querySelectorAll("[data-counter]").forEach(t=>{n.observe(t)});function a(t,e){switch(e){case"space":return t.toString().replace(/\B(?=(\d{3})+(?!\d))/g,"&nbsp;");case"comma":return t.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",");case"period":return t.toString().replace(/\B(?=(\d{3})+(?!\d))/g,".")}return t}function o(t){return 1-Math.cos(t*Math.PI/2)}function i(t){return Math.sin(t*Math.PI/2)}function s(t){return-(Math.cos(3.14159265359*t)-1)/2}});